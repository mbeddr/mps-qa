<project name="jacoco.sandbox" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.mps.config.path" location="${build.dir}/config" />
  <property name="build.mps.system.path" location="${build.dir}/system" />
  <property name="build.tmp" location="${build.dir}/tmp/jacoco.sandbox" />
  <property name="build.layout" location="${build.dir}/artifacts/jacoco.sandbox" />
  <property name="mps.home" location="" />
  <property name="mpsqa.home" location="" />
  <property name="mps.macro.mpsqa.home" location="${mpsqa.home}" />
  <property name="artifacts.mps" location="${mps.home}" />
  <property name="artifacts.org.mpsqa.testing" location="${mpsqa.home}/build/artifacts/org.mpsqa.testing" />
  <property name="artifacts.org.mpsqa.base" location="${mpsqa.home}/build/artifacts/org.mpsqa.base" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version.major" value="${import.mps.mpsBootstrapCore.version.major}" />
  <property name="mpsBootstrapCore.version.minor" value="${import.mps.mpsBootstrapCore.version.minor}" />
  <property name="mpsBootstrapCore.version.bugfixNr" value="${import.mps.mpsBootstrapCore.version.bugfixNr}" />
  <property name="mpsBootstrapCore.version.eap" value="${import.mps.mpsBootstrapCore.version.eap}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="jacoco.reports.dir" location="${build.dir}/jacoco-reports/jacoco.sandbox" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  <property name="mps.ant.log" value="warn" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <fileset dir="${artifacts.mps}/lib">
      <include name="util.jar" />
    </fileset>
  </path>
  
  <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  
  <generator-settings id="m2m-defaults" strictMode="true" parallelThreads="8" inplaceTransform="false" warnWrongChild="true" createStaticRefs="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}" />
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/jacoco.sandbox.jar" />
    <mkdir dir="${build.tmp}/default/jacoco.sandbox.jar/META-INF" />
    <echoxml file="${build.tmp}/default/jacoco.sandbox.jar/META-INF/module.xml">
      <module namespace="jacoco.sandbox" type="solution" uuid="6790318a-7335-4ffc-8a54-c17afd89c4c3">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
        </dependencies>
        <uses>
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="jacoco.sandbox-src.jar" descriptor="jacoco.sandbox.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/jacoco.sandbox.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/jacoco.sandbox" />
      <fileset dir="${basedir}/jacoco.sandbox" includes="icons/**, resources/**" />
      <fileset dir="${basedir}/jacoco.sandbox/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/jacoco.sandbox.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/jacoco.sandbox-models">
      <fileset dir="${basedir}/jacoco.sandbox/models" includes="**/*.mps, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/jacoco.sandbox-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/jacoco.sandbox/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/jacoco.sandbox/jacoco.sandbox.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/jacoco.sandbox-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/jacoco.sandbox.tests.jar" />
    <mkdir dir="${build.tmp}/default/jacoco.sandbox.tests.jar/META-INF" />
    <echoxml file="${build.tmp}/default/jacoco.sandbox.tests.jar/META-INF/module.xml">
      <module namespace="jacoco.sandbox.tests" type="solution" uuid="b8361996-e168-4243-ad78-371ab9e34b18">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="49808fad-9d41-4b96-83fa-9231640f6b2b(JUnit)" kind="rt" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="rt" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" kind="rt" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" kind="rt" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" kind="rt" />
          <module ref="e55e6749-03cb-4ea7-9695-2322bab791c1(jetbrains.mps.lang.test.matcher)" kind="rt" />
          <module ref="707c4fde-f79a-44b5-b3d7-b5cef8844ccf(jetbrains.mps.lang.test.runtime)" kind="rt" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" kind="rt" />
          <module ref="6790318a-7335-4ffc-8a54-c17afd89c4c3(jacoco.sandbox)" kind="cl" />
          <module ref="f3061a53-9226-4cc5-a443-f952ceaf5816(jetbrains.mps.baseLanguage)" kind="cl" />
        </dependencies>
        <uses>
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
          <language id="l:f61473f9-130f-42f6-b98d-6c438812c2f6:jetbrains.mps.baseLanguage.unitTest" />
          <language id="l:7866978e-a0f0-4cc7-81bc-4d213d9375e1:jetbrains.mps.lang.smodel" />
          <language id="l:8585453e-6bfb-4d80-98de-b16074f1d86c:jetbrains.mps.lang.test" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="jacoco.sandbox.tests-src.jar" descriptor="jacoco.sandbox.tests.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/jacoco.sandbox.tests.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/jacoco.sandbox.tests" />
      <fileset dir="${basedir}/jacoco.sandbox.tests" includes="icons/**, resources/**" />
      <fileset dir="${basedir}/jacoco.sandbox.tests/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/jacoco.sandbox.tests.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/jacoco.sandbox.tests-models">
      <fileset dir="${basedir}/jacoco.sandbox.tests/models" includes="**/*.mps, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/jacoco.sandbox.tests-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/jacoco.sandbox.tests/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/jacoco.sandbox.tests/jacoco.sandbox.tests.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/jacoco.sandbox.tests-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version.major=${mpsBootstrapCore.version.major}${line.separator}mpsBootstrapCore.version.minor=${mpsBootstrapCore.version.minor}${line.separator}mpsBootstrapCore.version.bugfixNr=${mpsBootstrapCore.version.bugfixNr}${line.separator}mpsBootstrapCore.version.eap=${mpsBootstrapCore.version.eap}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.mps.config.path}" />
    <delete dir="${build.mps.system.path}" />
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.jacoco.sandbox.build, java.compile.jacoco.sandbox, java.compile.jacoco.sandbox.tests" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes, module-tests" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate fork="true" logLevel="${mps.ant.log}">      
      <settings refid="m2m-defaults" />
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" />
      <plugin path="${artifacts.mps}/plugins/mps-testing" />
      <plugin path="${artifacts.org.mpsqa.base}/org.mpsqa.base" />
      <plugin path="${artifacts.org.mpsqa.base}/org.mpsqa.base.build" />
      <plugin path="${artifacts.org.mpsqa.testing}/org.mpsqa.testing" />
      <plugin path="${artifacts.org.mpsqa.testing}/org.mpsqa.testing.build" />
      <library file="${artifacts.mps}/languages/baseLanguage/closures.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/collections.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.extensionMethods.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.references.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.util.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editing.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editor.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editorlang.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.ide.editor.jar" />
      <library file="${artifacts.mps}/languages/editor/typesystemIntegration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.kinds.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.skeleton.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.defs.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.typesystemEngine.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.facets.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.runtime.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.smodel.resources.jar" />
      <library file="${artifacts.mps}/languages/mps-stubs.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.baseLanguage.search.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.platform.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.refactoring.platform.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.analyzers.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.dataFlow.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.findUsages.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.behavior.api.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.behavior.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.context.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.problem.legacy-constraints.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.problem.rt.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.smodel.query.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.refactoring.runtime.jar" />
      <library file="${artifacts.mps}/languages/text/jetbrains.mps.lang.text.jar" />
      <library file="${artifacts.mps}/languages/tools/jetbrains.mps.core.tool.environment.jar" />
      <library file="${artifacts.mps}/languages/tools/jetbrains.mps.tool.common.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.java.stub.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.kernel.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.lang.makeup.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.project.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.refactoring.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.runtime.jar" />
      <library file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
      <chunk>
        <module file="${basedir}/jacoco.sandbox/jacoco.sandbox.msd" />
        <module file="${basedir}/jacoco.sandbox.build/jacoco.sandbox.build.msd" />
        <module file="${basedir}/jacoco.sandbox.tests/jacoco.sandbox.tests.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
        <arg value="--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED" />
      </jvmargs>
      <macro name="mps.home" path="${mps.home}" />
      <macro name="mpsqa.home" path="${mpsqa.home}" />
      <macro name="mps.macro.mpsqa.home" path="${mps.macro.mpsqa.home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" />
  </target>
  
  <target name="makeDependents" />
  
  <target name="module-tests" depends="assemble, coverage.test" />
  
  <target name="java.compile.jacoco.sandbox.build">
    <mkdir dir="${basedir}/jacoco.sandbox.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/jacoco.sandbox.build" />
    <javac destdir="${build.tmp}/java/out/jacoco.sandbox.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/jacoco.sandbox.build/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.org.mpsqa.base}/org.mpsqa.base.build/languages/build/org.mpsqa.base.build.jar" />
        <fileset file="${artifacts.org.mpsqa.testing}/org.mpsqa.testing.build/languages/org.mpsqa.testing.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.jacoco.sandbox" depends="fetchDependencies">
    <mkdir dir="${basedir}/jacoco.sandbox/source_gen" />
    <mkdir dir="${build.tmp}/java/out/jacoco.sandbox" />
    <javac destdir="${build.tmp}/java/out/jacoco.sandbox" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/jacoco.sandbox/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.jacoco.sandbox.tests" depends="java.compile.jacoco.sandbox, fetchDependencies">
    <mkdir dir="${basedir}/jacoco.sandbox.tests/source_gen" />
    <mkdir dir="${build.tmp}/java/out/jacoco.sandbox.tests" />
    <javac destdir="${build.tmp}/java/out/jacoco.sandbox.tests" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/jacoco.sandbox.tests/source_gen" />
        <pathelement path="${basedir}/jacoco.sandbox.tests/test_gen/" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
        <pathelement path="${build.tmp}/java/out/jacoco.sandbox" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-context.jar" />
        <fileset file="${artifacts.mps}/lib/mps-constraints-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mps}/lib/mps-persistence.jar" />
        <fileset file="${artifacts.mps}/lib/mps-generator.jar" />
        <fileset file="${artifacts.mps}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mps}/lib/mps-test.jar" />
        <fileset file="${artifacts.mps}/lib/ant/lib/ant.jar" />
        <fileset file="${artifacts.mps}/lib/junit4.jar" />
        <fileset file="${artifacts.mps}/lib/app.jar" />
        <fileset file="${artifacts.mps}/lib/3rd-party-rt.jar" />
        <fileset file="${artifacts.mps}/lib/util.jar" />
        <fileset file="${artifacts.mps}/lib/util_rt.jar" />
        <fileset file="${artifacts.mps}/lib/forms_rt.jar" />
        <fileset file="${artifacts.mps}/lib/java-impl.jar" />
        <fileset file="${artifacts.mps}/lib/jps-model.jar" />
        <fileset file="${artifacts.mps}/lib/testFramework.jar" />
        <fileset file="${artifacts.mps}/lib/stats.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.matcher.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="coverage.test" depends="assemble">
    <path id="mps.libraries.path">
      <pathelement location="${artifacts.mps}/languages/baseLanguage/closures.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/collections.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.references.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.util.jar" />
      <pathelement location="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <pathelement location="${artifacts.mps}/languages/editor/jetbrains.mps.editor.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/editor/jetbrains.mps.editorlang.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.kinds.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.skeleton.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.defs.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <pathelement location="${artifacts.mps}/languages/languageDesign/jetbrains.mps.typesystemEngine.jar" />
      <pathelement location="${artifacts.mps}/languages/make/jetbrains.mps.make.facets.jar" />
      <pathelement location="${artifacts.mps}/languages/make/jetbrains.mps.make.jar" />
      <pathelement location="${artifacts.mps}/languages/make/jetbrains.mps.make.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/make/jetbrains.mps.smodel.resources.jar" />
      <pathelement location="${artifacts.mps}/languages/mps-stubs.jar" />
      <pathelement location="${artifacts.mps}/languages/plaf/jetbrains.mps.baseLanguage.search.jar" />
      <pathelement location="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.platform.jar" />
      <pathelement location="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.refactoring.platform.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.analyzers.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.dataFlow.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.findUsages.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.behavior.api.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.behavior.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.context.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.problem.legacy-constraints.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.feedback.problem.rt.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.migration.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.smodel.query.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/runtimes/jetbrains.mps.refactoring.runtime.jar" />
      <pathelement location="${artifacts.mps}/languages/text/jetbrains.mps.lang.text.jar" />
      <pathelement location="${artifacts.mps}/languages/tools/jetbrains.mps.core.tool.environment.jar" />
      <pathelement location="${artifacts.mps}/languages/tools/jetbrains.mps.tool.common.jar" />
      <pathelement location="${artifacts.mps}/languages/util/jetbrains.mps.java.stub.jar" />
      <pathelement location="${artifacts.mps}/languages/util/jetbrains.mps.kernel.jar" />
      <pathelement location="${artifacts.mps}/languages/util/jetbrains.mps.project.jar" />
      <pathelement location="${artifacts.mps}/languages/util/jetbrains.mps.refactoring.jar" />
      <pathelement location="${artifacts.mps}/languages/util/jetbrains.mps.runtime.jar" />
      <pathelement location="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.jar" />
      <pathelement location="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.jar" />
      <pathelement location="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.matcher.jar" />
      <pathelement location="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.runtime.jar" />
      <pathelement location="${build.layout}/jacoco.sandbox.jar" />
    </path>
    <pathconvert property="mps.libraries.path.string" refid="mps.libraries.path" />
    <path id="mps.plugins.path">
      <pathelement location="${artifacts.mps}/plugins/mps-core" />
      <pathelement location="${artifacts.mps}/plugins/mps-testing" />
    </path>
    <pathconvert property="mps.plugins.path.string" refid="mps.plugins.path" />
    <path location="${build.layout}/jacoco.sandbox.tests.jar" id="mps.tests.path" />
    <pathconvert property="mps.tests.path.string" refid="mps.tests.path" />
    <path id="long.class.path">
      <fileset dir="${artifacts.mps}/lib">
        <include name="**/*.jar" />
      </fileset>
      <pathelement path="${jdk.home}/lib/tools.jar" />
    </path>
    <pathconvert pathsep=" " targetos="unix" property="manifest.classpath">
      <path refid="long.class.path" />
      <chainedmapper>
        <filtermapper>
          <replacestring from=" " to="%20" />
        </filtermapper>
        <globmapper from="*" to="file:///*" />
      </chainedmapper>
    </pathconvert>
    <jar jarfile="${build.tmp}/mps.class.path.jar">
      <manifest>
        <attribute name="Class-Path" value="${manifest.classpath}" />
      </manifest>
    </jar>
    <property name="build.jna.library.path" location="${artifacts.mps}/lib/jna" />
    <jacoco:coverage xmlns:jacoco="antlib:org.jacoco.ant" destfile="${build.tmp}/jacoco/test.exec">
      <junit showoutput="true" fork="true" haltonfailure="true" dir="${basedir}">
        <jvmarg value="-ea" />
        <jvmarg value="-Xss2048k" />
        <jvmarg value="-Xmx1024m" />
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-Didea.config.path=${build.mps.config.path}" />
        <jvmarg value="-Didea.system.path=${build.mps.system.path}" />
        <jvmarg value="-Djna.boot.library.path=${build.jna.library.path}" />
        <jvmarg value="--add-opens=java.base/java.io=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.lang=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.lang.reflect=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.net=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.nio=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.nio.charset=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.text=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.time=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.util=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.util.concurrent=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/jdk.internal.vm=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/sun.nio.ch=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/sun.security.ssl=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.base/sun.security.util=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/com.apple.eawt=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/com.apple.eawt.event=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/com.apple.laf=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/java.awt=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/java.awt.dnd.peer=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/java.awt.event=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/java.awt.image=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/javax.swing=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/javax.swing.text.html=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.awt.datatransfer=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.awt=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.font=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.java2d=ALL-UNNAMED" />
        <jvmarg value="--add-opens=java.desktop/sun.swing=ALL-UNNAMED" />
        <jvmarg value="--add-opens=jdk.attach/sun.tools.attach=ALL-UNNAMED" />
        <jvmarg value="--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED" />
        <jvmarg value="--add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED" />
        <jvmarg value="--add-opens=jdk.jdi/com.sun.tools.jdi=ALL-UNNAMED" />
        
        <classpath location="${build.tmp}/mps.class.path.jar" />
        
        <env key="NO_FS_ROOTS_ACCESS_CHECK" value="true" />
        
        <sysproperty key="plugin.path" value="${mps.plugins.path.string}" />
        <sysproperty key="mps.libraries" value="${mps.libraries.path.string}" />
        <sysproperty key="mps.test.modules" value="${mps.tests.path.string}" />
        
        <sysproperty key="mps.macro.mpsqa.home" value="${mpsqa.home}" />
        
        <test name="jetbrains.mps.testbench.junit.suites.AntModuleTestSuite0" outfile="TEST-jetbrains.mps.testbench.junit.suites.AntModuleTestSuite0-test" />
        <formatter type="xml" />
      </junit>
    </jacoco:coverage>
    <jacoco:report xmlns:jacoco="antlib:org.jacoco.ant">
      <executiondata>
        <file file="${build.tmp}/jacoco/test.exec" />
      </executiondata>
      
      <structure name="test">
        <group name="modules">
          <group name="mps group main">
            <group name="[S] jacoco.sandbox">
              <classfiles>
                <fileset file="${build.layout}/jacoco.sandbox.jar" />
              </classfiles>
              <sourcefiles>
                <archives>
                  <zips>
                    <fileset file="${build.layout}/jacoco.sandbox-src.jar" />
                  </zips>
                </archives>
              </sourcefiles>
            </group>
          </group>
        </group>
        <group name="tests">
          <group name="mps group test">
            <group name="[S] jacoco.sandbox.tests">
              <classfiles>
                <fileset file="${build.layout}/jacoco.sandbox.tests.jar" />
              </classfiles>
              <sourcefiles>
                <archives>
                  <zips>
                    <fileset file="${build.layout}/jacoco.sandbox.tests-src.jar" />
                  </zips>
                </archives>
              </sourcefiles>
            </group>
          </group>
        </group>
      </structure>
      
      <html destdir="${jacoco.reports.dir}/test/html" />
      <xml destfile="${jacoco.reports.dir}/test.xml" />
    </jacoco:report>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/jacoco.sandbox/source_gen" />
    <delete dir="${basedir}/jacoco.sandbox.build/source_gen" />
    <delete dir="${basedir}/jacoco.sandbox.tests/source_gen" />
    <delete dir="${basedir}/jacoco.sandbox.tests/test_gen" />
  </target>
</project>