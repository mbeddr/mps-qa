<project name="org.mpsqa.allScripts" default="build" basedir="../..">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/org.mpsqa.allScripts" />
  <property name="build.layout" location="${build.dir}/artifacts/org.mpsqa.allScripts" />
  <property name="mps.home" location="" />
  <property name="artifacts.mps" location="${mps.home}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mps.runtimeBuild" value="${import.mps.mps.runtimeBuild}" />
  <property name="mpsBootstrapCore.version.major" value="${import.mps.mpsBootstrapCore.version.major}" />
  <property name="mpsBootstrapCore.version.minor" value="${import.mps.mpsBootstrapCore.version.minor}" />
  <property name="mpsBootstrapCore.version.bugfixNr" value="${import.mps.mpsBootstrapCore.version.bugfixNr}" />
  <property name="mpsBootstrapCore.version.eap" value="${import.mps.mpsBootstrapCore.version.eap}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  <property name="mps.ant.log" value="warn" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <fileset dir="${artifacts.mps}/lib">
      <include name="util-8.jar" />
    </fileset>
  </path>
  
  <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  
  <generator-settings id="m2m-defaults" strictMode="true" parallelThreads="8" inplaceTransform="false" warnWrongChild="true" createStaticRefs="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}" />
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mps.runtimeBuild=${mps.runtimeBuild}${line.separator}mpsBootstrapCore.version.major=${mpsBootstrapCore.version.major}${line.separator}mpsBootstrapCore.version.minor=${mpsBootstrapCore.version.minor}${line.separator}mpsBootstrapCore.version.bugfixNr=${mpsBootstrapCore.version.bugfixNr}${line.separator}mpsBootstrapCore.version.eap=${mpsBootstrapCore.version.eap}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.org.mpsqa.build.allScripts, java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.build, java.compile.org.mpsqa.build.sandboxes, java.compile.org.mpsqa.clones.build, java.compile.org.mpsqa.lint.build, java.compile.org.mpsqa.testing.build, java.compile.org.mpsqa.testing.tests.build" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate fork="true" logLevel="${mps.ant.log}">      
      <settings refid="m2m-defaults" />
      <plugin path="${artifacts.mps}/plugins/mps-build" id="jetbrains.mps.build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" id="jetbrains.mps.core" />
      <chunk>
        <module file="${basedir}/code/languages/org.mpsqa.base/solutions/org.mpsqa.base.build/org.mpsqa.base.build.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build/org.mpsqa.build.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.allScripts/org.mpsqa.build.allScripts.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.sandboxes/org.mpsqa.build.sandboxes.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.clones/solutions/org.mpsqa.clones.build/org.mpsqa.clones.build.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.lint/solutions/org.mpsqa.lint.build/org.mpsqa.lint.build.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.build/org.mpsqa.testing.build.msd" />
        <module file="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.tests.build/org.mpsqa.testing.tests.build.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx1024m" />
        <arg value="--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED" />
      </jvmargs>
      <macro name="mps.home" path="${mps.home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks" />
  
  <target name="makeDependents" />
  
  <target name="java.compile.org.mpsqa.build.allScripts">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.allScripts/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.build.allScripts" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.build.allScripts" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.allScripts/source_gen" />
      </src>
      <classpath />
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.build.allScripts">
      <fileset dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.allScripts/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.base.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.base/solutions/org.mpsqa.base.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.base.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.base.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.base/solutions/org.mpsqa.base.build/source_gen" />
      </src>
      <classpath />
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.base.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.base/solutions/org.mpsqa.base.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.build" depends="java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.testing.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.mpsqa.base.build" />
        <pathelement path="${build.tmp}/java/out/org.mpsqa.testing.build" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.build.sandboxes" depends="java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.sandboxes/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.build.sandboxes" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.build.sandboxes" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.sandboxes/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.mpsqa.base.build" />
        <pathelement path="${build.tmp}/java/out/org.mpsqa.build" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.build.sandboxes">
      <fileset dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.sandboxes/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.clones.build" depends="java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.clones/solutions/org.mpsqa.clones.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.clones.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.clones.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.clones/solutions/org.mpsqa.clones.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.mpsqa.base.build" />
        <pathelement path="${build.tmp}/java/out/org.mpsqa.build" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.clones.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.clones/solutions/org.mpsqa.clones.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.lint.build" depends="java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.lint/solutions/org.mpsqa.lint.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.lint.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.lint.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.lint/solutions/org.mpsqa.lint.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.mpsqa.base.build" />
        <pathelement path="${build.tmp}/java/out/org.mpsqa.build" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.lint.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.lint/solutions/org.mpsqa.lint.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.testing.build" depends="java.compile.org.mpsqa.base.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.testing.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.testing.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.build/source_gen" />
      </src>
      <classpath path="${build.tmp}/java/out/org.mpsqa.base.build" />
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.testing.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.org.mpsqa.testing.tests.build" depends="java.compile.org.mpsqa.base.build, java.compile.org.mpsqa.testing.build">
    <mkdir dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.tests.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.mpsqa.testing.tests.build" />
    <javac destdir="${build.tmp}/java/out/org.mpsqa.testing.tests.build" fork="false" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.tests.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.mpsqa.base.build" />
        <pathelement path="${build.tmp}/java/out/org.mpsqa.testing.build" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/org.mpsqa.testing.tests.build">
      <fileset dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.tests.build/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/code/languages/org.mpsqa.base/solutions/org.mpsqa.base.build/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.allScripts/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.build/solutions/org.mpsqa.build.sandboxes/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.clones/solutions/org.mpsqa.clones.build/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.lint/solutions/org.mpsqa.lint.build/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.build/source_gen" />
    <delete dir="${basedir}/code/languages/org.mpsqa.testing/solutions/org.mpsqa.testing.tests.build/source_gen" />
  </target>
</project>