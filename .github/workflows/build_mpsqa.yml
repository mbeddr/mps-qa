
name: MPS-QA_CI

on:
  push:
    branches:
      - master
      - 'maintenance/*'
  pull_request:
  workflow_dispatch:
    inputs:
      publish:
        description: Whether to publish the build result to Maven repositories
        type: boolean
        default: false
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.MPS_CI_BUILD_BOT_ACCESS_TOKEN }}

jobs:
  build_mps_qa_packages:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: temurin

    - name: Set up Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build MPS-QA and migrate
      run: |
          xvfb-run ./gradlew build migrate remigrate \
            -Partifacts.itemis.cloud.user=${{secrets.ARTIFACTS_ITEMIS_CLOUD_USER}} \
            -Partifacts.itemis.cloud.pw=${{secrets.ARTIFACTS_ITEMIS_CLOUD_PW}}

    - name: Dump Java stacks on cancellation
      if: cancelled()
      run: |
        jps -mlv > build/jps.txt
        for pid in $(jps -q); do jstack -l -e $pid > build/stack$pid.txt || true; done

    - name: Upload logs on cancellation or failure
      uses: actions/upload-artifact@v4
      if: cancelled() || failure()
      with:
        name: logs
        path: |
          build/system/log/
          build/system/testlog/
          build/jps.txt
          build/stack*.txt

    - name: Check for no dirty files after build and migration
      run: |
        if [[ -n $(git status --porcelain | head --lines=1) ]]
        then          
          echo "Dirty files detected after build/migration, run './gradlew build migrate remigrate' and/or update .gitignore to fix:"
          git status
          echo ">>>>>>>>>>>>>>>>>>>>>"
          git diff
          echo "<<<<<<<<<<<<<<<<<<<<<"
          exit 1
        fi

    - name: Publish

      # Only publish on push (to maintenance or master) or when explicitly requested
      if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.publish == 'true') }}

      run: |
        ./gradlew publish -x build_allInOne_package \
          -Partifacts.itemis.cloud.user=${{secrets.ARTIFACTS_ITEMIS_CLOUD_USER}} \
          -Partifacts.itemis.cloud.pw=${{secrets.ARTIFACTS_ITEMIS_CLOUD_PW}}

    - name: Archive distribution
      uses: actions/upload-artifact@v4
      with:
        name: org.mpsqa.allInOne
        path: build/artifacts/org.mpsqa.allInOne/
